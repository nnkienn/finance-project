spring:
  datasource:
    url: jdbc:postgresql://ep-broad-math-a13t2u29-pooler.ap-southeast-1.aws.neon.tech/neondb?sslmode=require&channel_binding=require
    username: neondb_owner
    password: "npg_TmdD7GIebz3K"
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 10
      minimum-idle: 2
      idle-timeout: 30000
      max-lifetime: 1800000
      connection-timeout: 20000

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect

  kafka:
    bootstrap-servers: localhost:9092   # n·∫øu Kafka ch·∫°y Docker local v·ªõi ADVERTISED localhost
    consumer:
      group-id: finance-app
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "*"
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      acks: all
      retries: 5
      enable-idempotence: true
      linger-ms: 5

  mail:
    host: smtp.gmail.com
    port: 587
    username: nnkienn@gmail.com
    password: jfswbecqkvkyhqql        # üîê App password m·ªõi (16 k√Ω t·ª±, kh√¥ng c√≥ d·∫•u c√°ch)
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
          connectiontimeout: 5000
          timeout: 5000
          writetimeout: 5000

  profiles:
    active: gmail

server:
  port: 8080
  error:
    include-message: always
    include-binding-errors: always

logging:
  level:
    org.springframework.kafka: DEBUG
    org.springframework.kafka.listener: DEBUG
    org.springframework.kafka.core.KafkaTemplate: DEBUG
    org.springframework.kafka.support.serializer: DEBUG
    org.apache.kafka.clients: INFO
    org.apache.kafka.common.network: INFO
    org.apache.kafka.common.metrics: WARN
    org.hibernate.SQL: INFO
    org.hibernate.orm.jdbc.bind: INFO

app:
  jwt:
    base64-secret: Lx28C1P6FJvJZp3SkX5y2y4j3KX3iU7+M7XAZmUjB6c=
    access-token-validity-seconds: 900
    refresh-token-validity-seconds: 604800

  verification:
    expire-minutes: 60

  outbox:
    cleanup:
      enabled: true
      retention-days: 14
      batch-size: 500
      cron: "0 0 3 * * *"

  email:
    from: nnkienn@gmail.com
    sender-name: "Knance Notifications"
